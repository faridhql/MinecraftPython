[
    {
        "label": "*",
        "importPath": "ursina",
        "description": "ursina",
        "isExtraImport": true,
        "detail": "ursina",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "ursina",
        "description": "ursina",
        "isExtraImport": true,
        "detail": "ursina",
        "documentation": {}
    },
    {
        "label": "FirstPersonController",
        "importPath": "ursina.prefabs.first_person_controller",
        "description": "ursina.prefabs.first_person_controller",
        "isExtraImport": true,
        "detail": "ursina.prefabs.first_person_controller",
        "documentation": {}
    },
    {
        "label": "Test_cube",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class Test_cube(Entity):\n\tdef __init__(self):\n\t\tsuper().__init__(\n\t\t\tparent = scene,\n\t\t\tmodel = 'cube',\n\t\t\ttexture = 'white_cube',\n\t\t\trotation = Vec3(45,45,45))\nclass Test_button(Button):\n\tdef __init__(self,scale = 0.1):\n\t\tsuper().__init__(",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "Test_button",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class Test_button(Button):\n\tdef __init__(self,scale = 0.1):\n\t\tsuper().__init__(\n\t\t\tparent = scene,\n\t\t\tmodel = 'cube',\n\t\t\ttexture = 'brick',\n\t\t\tcolor = color.white,\n\t\t\thighlight_color = color.red,\n\t\t\tpressed_color = color.lime)\n\tdef input(self,key):",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "update",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def update():\n\tif held_keys['a']:\n\t\tcube.x -= 1 * time.dt\napp = Ursina()\ncube = Entity(model='quad', color=color.orange, scale = (2,5), position = (5,1))\n# quad with texture\n#sans_image = load_texture('Sans.png')\n#sans = Entity(model = 'quad', texture = sans_image)\n#sans = Entity(model = 'quad', texture = 'Sans.png')\n# creating a block properly",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "\t\t\tparent",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "\t\t\tparent = scene,\n\t\t\tmodel = 'cube',\n\t\t\ttexture = 'white_cube',\n\t\t\trotation = Vec3(45,45,45))\nclass Test_button(Button):\n\tdef __init__(self,scale = 0.1):\n\t\tsuper().__init__(\n\t\t\tparent = scene,\n\t\t\tmodel = 'cube',\n\t\t\ttexture = 'brick',",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "\t\t\tmodel",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "\t\t\tmodel = 'cube',\n\t\t\ttexture = 'white_cube',\n\t\t\trotation = Vec3(45,45,45))\nclass Test_button(Button):\n\tdef __init__(self,scale = 0.1):\n\t\tsuper().__init__(\n\t\t\tparent = scene,\n\t\t\tmodel = 'cube',\n\t\t\ttexture = 'brick',\n\t\t\tcolor = color.white,",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "\t\t\ttexture",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "\t\t\ttexture = 'white_cube',\n\t\t\trotation = Vec3(45,45,45))\nclass Test_button(Button):\n\tdef __init__(self,scale = 0.1):\n\t\tsuper().__init__(\n\t\t\tparent = scene,\n\t\t\tmodel = 'cube',\n\t\t\ttexture = 'brick',\n\t\t\tcolor = color.white,\n\t\t\thighlight_color = color.red,",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "\t\t\trotation",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "\t\t\trotation = Vec3(45,45,45))\nclass Test_button(Button):\n\tdef __init__(self,scale = 0.1):\n\t\tsuper().__init__(\n\t\t\tparent = scene,\n\t\t\tmodel = 'cube',\n\t\t\ttexture = 'brick',\n\t\t\tcolor = color.white,\n\t\t\thighlight_color = color.red,\n\t\t\tpressed_color = color.lime)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "\t\t\tparent",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "\t\t\tparent = scene,\n\t\t\tmodel = 'cube',\n\t\t\ttexture = 'brick',\n\t\t\tcolor = color.white,\n\t\t\thighlight_color = color.red,\n\t\t\tpressed_color = color.lime)\n\tdef input(self,key):\n\t\tif self.hovered:\n\t\t\tif key == 'left mouse down':\n\t\t\t\tpunch_sound.play()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "\t\t\tmodel",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "\t\t\tmodel = 'cube',\n\t\t\ttexture = 'brick',\n\t\t\tcolor = color.white,\n\t\t\thighlight_color = color.red,\n\t\t\tpressed_color = color.lime)\n\tdef input(self,key):\n\t\tif self.hovered:\n\t\t\tif key == 'left mouse down':\n\t\t\t\tpunch_sound.play()\ndef update():",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "\t\t\ttexture",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "\t\t\ttexture = 'brick',\n\t\t\tcolor = color.white,\n\t\t\thighlight_color = color.red,\n\t\t\tpressed_color = color.lime)\n\tdef input(self,key):\n\t\tif self.hovered:\n\t\t\tif key == 'left mouse down':\n\t\t\t\tpunch_sound.play()\ndef update():\n\tif held_keys['a']:",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "\t\t\tcolor",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "\t\t\tcolor = color.white,\n\t\t\thighlight_color = color.red,\n\t\t\tpressed_color = color.lime)\n\tdef input(self,key):\n\t\tif self.hovered:\n\t\t\tif key == 'left mouse down':\n\t\t\t\tpunch_sound.play()\ndef update():\n\tif held_keys['a']:\n\t\tcube.x -= 1 * time.dt",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "\t\t\thighlight_color",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "\t\t\thighlight_color = color.red,\n\t\t\tpressed_color = color.lime)\n\tdef input(self,key):\n\t\tif self.hovered:\n\t\t\tif key == 'left mouse down':\n\t\t\t\tpunch_sound.play()\ndef update():\n\tif held_keys['a']:\n\t\tcube.x -= 1 * time.dt\napp = Ursina()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "\t\t\tpressed_color",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "\t\t\tpressed_color = color.lime)\n\tdef input(self,key):\n\t\tif self.hovered:\n\t\t\tif key == 'left mouse down':\n\t\t\t\tpunch_sound.play()\ndef update():\n\tif held_keys['a']:\n\t\tcube.x -= 1 * time.dt\napp = Ursina()\ncube = Entity(model='quad', color=color.orange, scale = (2,5), position = (5,1))",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app = Ursina()\ncube = Entity(model='quad', color=color.orange, scale = (2,5), position = (5,1))\n# quad with texture\n#sans_image = load_texture('Sans.png')\n#sans = Entity(model = 'quad', texture = sans_image)\n#sans = Entity(model = 'quad', texture = 'Sans.png')\n# creating a block properly\ntest = Test_cube()\n# creating a button\nbtn = Test_button()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "cube",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "cube = Entity(model='quad', color=color.orange, scale = (2,5), position = (5,1))\n# quad with texture\n#sans_image = load_texture('Sans.png')\n#sans = Entity(model = 'quad', texture = sans_image)\n#sans = Entity(model = 'quad', texture = 'Sans.png')\n# creating a block properly\ntest = Test_cube()\n# creating a button\nbtn = Test_button()\npunch_sound = Audio('assets/assets_puh_sound.wav', loop=False, autoplay=False)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "#sans_image",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "#sans_image = load_texture('Sans.png')\n#sans = Entity(model = 'quad', texture = sans_image)\n#sans = Entity(model = 'quad', texture = 'Sans.png')\n# creating a block properly\ntest = Test_cube()\n# creating a button\nbtn = Test_button()\npunch_sound = Audio('assets/assets_puh_sound.wav', loop=False, autoplay=False)\napp.run()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "#sans",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "#sans = Entity(model = 'quad', texture = sans_image)\n#sans = Entity(model = 'quad', texture = 'Sans.png')\n# creating a block properly\ntest = Test_cube()\n# creating a button\nbtn = Test_button()\npunch_sound = Audio('assets/assets_puh_sound.wav', loop=False, autoplay=False)\napp.run()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "#sans",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "#sans = Entity(model = 'quad', texture = 'Sans.png')\n# creating a block properly\ntest = Test_cube()\n# creating a button\nbtn = Test_button()\npunch_sound = Audio('assets/assets_puh_sound.wav', loop=False, autoplay=False)\napp.run()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "test",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "test = Test_cube()\n# creating a button\nbtn = Test_button()\npunch_sound = Audio('assets/assets_puh_sound.wav', loop=False, autoplay=False)\napp.run()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "btn",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "btn = Test_button()\npunch_sound = Audio('assets/assets_puh_sound.wav', loop=False, autoplay=False)\napp.run()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "punch_sound",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "punch_sound = Audio('assets/assets_puh_sound.wav', loop=False, autoplay=False)\napp.run()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "Voxel",
        "kind": 6,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "class Voxel(Button):\n\tdef __init__(self, position = (0,0,0), texture = grass_texture):\n\t\tsuper().__init__(\n\t\t\tparent = scene,\n\t\t\tposition = position,\n\t\t\tmodel = 'assets/block',\n\t\t\torigin_y = 0.5,\n\t\t\ttexture = texture,\n\t\t\tcolor = color.color(0,0,random.uniform(0.9,1)),\n\t\t\tscale = 0.5)",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "Sky",
        "kind": 6,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "class Sky(Entity):\n\tdef __init__(self):\n\t\tsuper().__init__(\n\t\t\tparent = scene,\n\t\t\tmodel = 'sphere',\n\t\t\ttexture = sky_texture,\n\t\t\tscale = 150,\n\t\t\tdouble_sided = True)\nclass Hand(Entity):\n\tdef __init__(self):",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "Hand",
        "kind": 6,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "class Hand(Entity):\n\tdef __init__(self):\n\t\tsuper().__init__(\n\t\t\tparent = camera.ui,\n\t\t\tmodel = 'assets/arm',\n\t\t\ttexture = arm_texture,\n\t\t\tscale = 0.2,\n\t\t\trotation = Vec3(150,-10,0),\n\t\t\tposition = Vec2(0.4,-0.6))\n\tdef active(self):",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "update",
        "kind": 2,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "def update():\n\tglobal block_pick\n\tif held_keys['left mouse'] or held_keys['right mouse']:\n\t\thand.active()\n\telse:\n\t\thand.passive()\n\tif held_keys['1']: block_pick = 1\n\tif held_keys['2']: block_pick = 2\n\tif held_keys['3']: block_pick = 3\n\tif held_keys['4']: block_pick = 4",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "app = Ursina()\ngrass_texture = load_texture('assets/grass_block.png')\nstone_texture = load_texture('assets/stone_block.png')\nbrick_texture = load_texture('assets/brick_block.png')\ndirt_texture  = load_texture('assets/dirt_block.png')\nsky_texture   = load_texture('assets/skybox.png')\narm_texture   = load_texture('assets/arm_texture.png')\npunch_sound   = Audio('assets/assets_puh_sound.wav',loop = False, autoplay = False)\nblock_pick = 1\nwindow.fps_counter.enabled = False",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "grass_texture",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "grass_texture = load_texture('assets/grass_block.png')\nstone_texture = load_texture('assets/stone_block.png')\nbrick_texture = load_texture('assets/brick_block.png')\ndirt_texture  = load_texture('assets/dirt_block.png')\nsky_texture   = load_texture('assets/skybox.png')\narm_texture   = load_texture('assets/arm_texture.png')\npunch_sound   = Audio('assets/assets_puh_sound.wav',loop = False, autoplay = False)\nblock_pick = 1\nwindow.fps_counter.enabled = False\nwindow.exit_button.visible = False",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "stone_texture",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "stone_texture = load_texture('assets/stone_block.png')\nbrick_texture = load_texture('assets/brick_block.png')\ndirt_texture  = load_texture('assets/dirt_block.png')\nsky_texture   = load_texture('assets/skybox.png')\narm_texture   = load_texture('assets/arm_texture.png')\npunch_sound   = Audio('assets/assets_puh_sound.wav',loop = False, autoplay = False)\nblock_pick = 1\nwindow.fps_counter.enabled = False\nwindow.exit_button.visible = False\ndef update():",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "brick_texture",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "brick_texture = load_texture('assets/brick_block.png')\ndirt_texture  = load_texture('assets/dirt_block.png')\nsky_texture   = load_texture('assets/skybox.png')\narm_texture   = load_texture('assets/arm_texture.png')\npunch_sound   = Audio('assets/assets_puh_sound.wav',loop = False, autoplay = False)\nblock_pick = 1\nwindow.fps_counter.enabled = False\nwindow.exit_button.visible = False\ndef update():\n\tglobal block_pick",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "block_pick",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "block_pick = 1\nwindow.fps_counter.enabled = False\nwindow.exit_button.visible = False\ndef update():\n\tglobal block_pick\n\tif held_keys['left mouse'] or held_keys['right mouse']:\n\t\thand.active()\n\telse:\n\t\thand.passive()\n\tif held_keys['1']: block_pick = 1",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "window.fps_counter.enabled",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "window.fps_counter.enabled = False\nwindow.exit_button.visible = False\ndef update():\n\tglobal block_pick\n\tif held_keys['left mouse'] or held_keys['right mouse']:\n\t\thand.active()\n\telse:\n\t\thand.passive()\n\tif held_keys['1']: block_pick = 1\n\tif held_keys['2']: block_pick = 2",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "window.exit_button.visible",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "window.exit_button.visible = False\ndef update():\n\tglobal block_pick\n\tif held_keys['left mouse'] or held_keys['right mouse']:\n\t\thand.active()\n\telse:\n\t\thand.passive()\n\tif held_keys['1']: block_pick = 1\n\tif held_keys['2']: block_pick = 2\n\tif held_keys['3']: block_pick = 3",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\tparent",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\tparent = scene,\n\t\t\tposition = position,\n\t\t\tmodel = 'assets/block',\n\t\t\torigin_y = 0.5,\n\t\t\ttexture = texture,\n\t\t\tcolor = color.color(0,0,random.uniform(0.9,1)),\n\t\t\tscale = 0.5)\n\tdef input(self,key):\n\t\tif self.hovered:\n\t\t\tif key == 'left mouse down':",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\tposition",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\tposition = position,\n\t\t\tmodel = 'assets/block',\n\t\t\torigin_y = 0.5,\n\t\t\ttexture = texture,\n\t\t\tcolor = color.color(0,0,random.uniform(0.9,1)),\n\t\t\tscale = 0.5)\n\tdef input(self,key):\n\t\tif self.hovered:\n\t\t\tif key == 'left mouse down':\n\t\t\t\tpunch_sound.play()",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\tmodel",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\tmodel = 'assets/block',\n\t\t\torigin_y = 0.5,\n\t\t\ttexture = texture,\n\t\t\tcolor = color.color(0,0,random.uniform(0.9,1)),\n\t\t\tscale = 0.5)\n\tdef input(self,key):\n\t\tif self.hovered:\n\t\t\tif key == 'left mouse down':\n\t\t\t\tpunch_sound.play()\n\t\t\t\tif block_pick == 1: voxel = Voxel(position = self.position + mouse.normal, texture = grass_texture)",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\torigin_y",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\torigin_y = 0.5,\n\t\t\ttexture = texture,\n\t\t\tcolor = color.color(0,0,random.uniform(0.9,1)),\n\t\t\tscale = 0.5)\n\tdef input(self,key):\n\t\tif self.hovered:\n\t\t\tif key == 'left mouse down':\n\t\t\t\tpunch_sound.play()\n\t\t\t\tif block_pick == 1: voxel = Voxel(position = self.position + mouse.normal, texture = grass_texture)\n\t\t\t\tif block_pick == 2: voxel = Voxel(position = self.position + mouse.normal, texture = stone_texture)",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\ttexture",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\ttexture = texture,\n\t\t\tcolor = color.color(0,0,random.uniform(0.9,1)),\n\t\t\tscale = 0.5)\n\tdef input(self,key):\n\t\tif self.hovered:\n\t\t\tif key == 'left mouse down':\n\t\t\t\tpunch_sound.play()\n\t\t\t\tif block_pick == 1: voxel = Voxel(position = self.position + mouse.normal, texture = grass_texture)\n\t\t\t\tif block_pick == 2: voxel = Voxel(position = self.position + mouse.normal, texture = stone_texture)\n\t\t\t\tif block_pick == 3: voxel = Voxel(position = self.position + mouse.normal, texture = brick_texture)",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\tcolor",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\tcolor = color.color(0,0,random.uniform(0.9,1)),\n\t\t\tscale = 0.5)\n\tdef input(self,key):\n\t\tif self.hovered:\n\t\t\tif key == 'left mouse down':\n\t\t\t\tpunch_sound.play()\n\t\t\t\tif block_pick == 1: voxel = Voxel(position = self.position + mouse.normal, texture = grass_texture)\n\t\t\t\tif block_pick == 2: voxel = Voxel(position = self.position + mouse.normal, texture = stone_texture)\n\t\t\t\tif block_pick == 3: voxel = Voxel(position = self.position + mouse.normal, texture = brick_texture)\n\t\t\t\tif block_pick == 4: voxel = Voxel(position = self.position + mouse.normal, texture = dirt_texture)",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\tscale",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\tscale = 0.5)\n\tdef input(self,key):\n\t\tif self.hovered:\n\t\t\tif key == 'left mouse down':\n\t\t\t\tpunch_sound.play()\n\t\t\t\tif block_pick == 1: voxel = Voxel(position = self.position + mouse.normal, texture = grass_texture)\n\t\t\t\tif block_pick == 2: voxel = Voxel(position = self.position + mouse.normal, texture = stone_texture)\n\t\t\t\tif block_pick == 3: voxel = Voxel(position = self.position + mouse.normal, texture = brick_texture)\n\t\t\t\tif block_pick == 4: voxel = Voxel(position = self.position + mouse.normal, texture = dirt_texture)\n\t\t\tif key == 'right mouse down':",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\tparent",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\tparent = scene,\n\t\t\tmodel = 'sphere',\n\t\t\ttexture = sky_texture,\n\t\t\tscale = 150,\n\t\t\tdouble_sided = True)\nclass Hand(Entity):\n\tdef __init__(self):\n\t\tsuper().__init__(\n\t\t\tparent = camera.ui,\n\t\t\tmodel = 'assets/arm',",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\tmodel",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\tmodel = 'sphere',\n\t\t\ttexture = sky_texture,\n\t\t\tscale = 150,\n\t\t\tdouble_sided = True)\nclass Hand(Entity):\n\tdef __init__(self):\n\t\tsuper().__init__(\n\t\t\tparent = camera.ui,\n\t\t\tmodel = 'assets/arm',\n\t\t\ttexture = arm_texture,",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\ttexture",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\ttexture = sky_texture,\n\t\t\tscale = 150,\n\t\t\tdouble_sided = True)\nclass Hand(Entity):\n\tdef __init__(self):\n\t\tsuper().__init__(\n\t\t\tparent = camera.ui,\n\t\t\tmodel = 'assets/arm',\n\t\t\ttexture = arm_texture,\n\t\t\tscale = 0.2,",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\tscale",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\tscale = 150,\n\t\t\tdouble_sided = True)\nclass Hand(Entity):\n\tdef __init__(self):\n\t\tsuper().__init__(\n\t\t\tparent = camera.ui,\n\t\t\tmodel = 'assets/arm',\n\t\t\ttexture = arm_texture,\n\t\t\tscale = 0.2,\n\t\t\trotation = Vec3(150,-10,0),",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\tdouble_sided",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\tdouble_sided = True)\nclass Hand(Entity):\n\tdef __init__(self):\n\t\tsuper().__init__(\n\t\t\tparent = camera.ui,\n\t\t\tmodel = 'assets/arm',\n\t\t\ttexture = arm_texture,\n\t\t\tscale = 0.2,\n\t\t\trotation = Vec3(150,-10,0),\n\t\t\tposition = Vec2(0.4,-0.6))",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\tparent",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\tparent = camera.ui,\n\t\t\tmodel = 'assets/arm',\n\t\t\ttexture = arm_texture,\n\t\t\tscale = 0.2,\n\t\t\trotation = Vec3(150,-10,0),\n\t\t\tposition = Vec2(0.4,-0.6))\n\tdef active(self):\n\t\tself.position = Vec2(0.3,-0.5)\n\tdef passive(self):\n\t\tself.position = Vec2(0.4,-0.6)",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\tmodel",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\tmodel = 'assets/arm',\n\t\t\ttexture = arm_texture,\n\t\t\tscale = 0.2,\n\t\t\trotation = Vec3(150,-10,0),\n\t\t\tposition = Vec2(0.4,-0.6))\n\tdef active(self):\n\t\tself.position = Vec2(0.3,-0.5)\n\tdef passive(self):\n\t\tself.position = Vec2(0.4,-0.6)\nfor z in range(20):",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\ttexture",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\ttexture = arm_texture,\n\t\t\tscale = 0.2,\n\t\t\trotation = Vec3(150,-10,0),\n\t\t\tposition = Vec2(0.4,-0.6))\n\tdef active(self):\n\t\tself.position = Vec2(0.3,-0.5)\n\tdef passive(self):\n\t\tself.position = Vec2(0.4,-0.6)\nfor z in range(20):\n\tfor x in range(20):",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\tscale",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\tscale = 0.2,\n\t\t\trotation = Vec3(150,-10,0),\n\t\t\tposition = Vec2(0.4,-0.6))\n\tdef active(self):\n\t\tself.position = Vec2(0.3,-0.5)\n\tdef passive(self):\n\t\tself.position = Vec2(0.4,-0.6)\nfor z in range(20):\n\tfor x in range(20):\n\t\tvoxel = Voxel(position = (x,0,z))",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\trotation",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\trotation = Vec3(150,-10,0),\n\t\t\tposition = Vec2(0.4,-0.6))\n\tdef active(self):\n\t\tself.position = Vec2(0.3,-0.5)\n\tdef passive(self):\n\t\tself.position = Vec2(0.4,-0.6)\nfor z in range(20):\n\tfor x in range(20):\n\t\tvoxel = Voxel(position = (x,0,z))\nplayer = FirstPersonController()",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\t\tposition",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\t\tposition = Vec2(0.4,-0.6))\n\tdef active(self):\n\t\tself.position = Vec2(0.3,-0.5)\n\tdef passive(self):\n\t\tself.position = Vec2(0.4,-0.6)\nfor z in range(20):\n\tfor x in range(20):\n\t\tvoxel = Voxel(position = (x,0,z))\nplayer = FirstPersonController()\nsky = Sky()",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\tself.position",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\tself.position = Vec2(0.3,-0.5)\n\tdef passive(self):\n\t\tself.position = Vec2(0.4,-0.6)\nfor z in range(20):\n\tfor x in range(20):\n\t\tvoxel = Voxel(position = (x,0,z))\nplayer = FirstPersonController()\nsky = Sky()\nhand = Hand()\napp.run()",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\tself.position",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\tself.position = Vec2(0.4,-0.6)\nfor z in range(20):\n\tfor x in range(20):\n\t\tvoxel = Voxel(position = (x,0,z))\nplayer = FirstPersonController()\nsky = Sky()\nhand = Hand()\napp.run()",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "\t\tvoxel",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "\t\tvoxel = Voxel(position = (x,0,z))\nplayer = FirstPersonController()\nsky = Sky()\nhand = Hand()\napp.run()",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "player",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "player = FirstPersonController()\nsky = Sky()\nhand = Hand()\napp.run()",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "sky",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "sky = Sky()\nhand = Hand()\napp.run()",
        "detail": "video",
        "documentation": {}
    },
    {
        "label": "hand",
        "kind": 5,
        "importPath": "video",
        "description": "video",
        "peekOfCode": "hand = Hand()\napp.run()",
        "detail": "video",
        "documentation": {}
    }
]